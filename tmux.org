#+TITLE:     Tmux
#+AUTHOR:    Adolfo De Unánue
#+EMAIL:     nanounanue@gmail.com
#+STARTUP: showeverything
#+STARTUP: nohideblocks
#+STARTUP: indent
#+PROPERTY:    header-args        :results silent   :eval no-export   :comments org
#+OPTIONS:     num:nil toc:nil todo:nil tasks:nil tags:nil
#+OPTIONS:     skip:nil author:nil email:nil creator:nil timestamp:nil
#+INFOJS_OPT:  view:nil toc:nil ltoc:t mouse:underline buttons:0 path:http://orgmode.org/org-info.js
#+TAGS: tmux

* Tmux

** Instalar tmux

#+BEGIN_SRC sh :tangle no :dir /sudo::
apt install libevent-dev autotools-dev automake bison
#+END_SRC

#+BEGIN_SRC sh :tangle no :dir ~/software
git clone https://github.com/tmux/tmux.git
#+END_SRC

#+BEGIN_SRC sh :tangle no :dir ~/software/tmux
sh autogen.sh && \
./configure && \
make
#+END_SRC

#+BEGIN_SRC sh :tangle no :dir /sudo::~/software/tmux
make install
#+END_SRC

** Instalar tmux plugins

#+BEGIN_SRC sh :tangle no
git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
#+END_SRC


** Instalar =tmuxp=

[[https://tmuxp.git-pull.com/en/latest/examples.html][Ejemplos]]


#+begin_src shell :tangle no
pip install tmuxp
#+end_src

** Configuración local: =tmux.conf=
:PROPERTIES:
:header-args:shell: :tangle ~/.tmux.conf
:END:

Mucho, mucho de esta configuración está basado en [[https://medium.com/free-code-camp/tmux-in-practice-series-of-posts-ae34f16cfab0][esta serie]] de
/posts/ de *Alexey Samoshkin*

*** General

#+begin_src shell
set -g default-terminal "screen-256color"
setw -g xterm-keys on
set -s escape-time 10                      # Secuencias de comandos más rápidas
set -sg repeat-time 600                    # Incrementar el timeout en las repeticiones
set -g focus-events on

set -q -g status-utf8 on                   # usar utf-8 (tmux < 2.2)
setw -q -g utf8 on

set -g history-limit 50000                 # Mucha historia

set -s escape 1 # Cambiando el delay al mandar comandos

# super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on

# Habilitando el mouse
set -g mouse off
set -g set-titles-string '#h ❐ #S ● #I #W'

# emacs key bindings in tmux command prompt (prefix + :) are better than
# vi keys, even for vim users
set -g status-keys emacs
#+end_src

*** /Hooks/

Prompt to rename window right after it's created

#+begin_src shell
#set-hook -g after-new-window 'command-prompt -I "#{window_name}" "rename-window '%%'"'
#+end_src

*** Copiar al /clipboard/

#+begin_src shell
bind-key -T copy-mode M-w send-keys -X copy-pipe-and-cancel "xclip -selection clipboard -i"
#+end_src

*** /Bindings/: =Ctrl-b=

Recarga el archivo de configuración de tmux

#+begin_src shell
bind r source-file ~/.tmux.conf \; display "¡tmux.conf Recargado!"
#+end_src


Limpia la pantalla y la historia

#+begin_src shell
bind -n C-l send-keys C-l \; run 'sleep 0.1' \; clear-history
#+end_src


Nueva ventana y retiene el /cureent working directory/

#+begin_src shell
bind c new-window -c "#{pane_current_path}"
#+end_src


#+begin_src shell
bind C-b send-prefix # Para usarlo con aplicaciones (hay que presionar dos veces)

bind b list-buffers        # Lista paste buffers
bind p paste-buffer        # paste from el top paste buffer
bind P choose-buffer       # escoge a cual buffer pegar


# Kill pane/window/session shortcuts
bind x kill-pane
bind X kill-window
bind C-x confirm-before -p "kill other windows? (y/n)" "kill-window -a"
bind Q confirm-before -p "kill-session #S? (y/n)" kill-session

# Merge session with another one (e.g. move all windows)
# If you use adhoc 1-window sessions, and you want to preserve session upon exit
# but don't want to create a lot of small unnamed 1-window sessions around
# move all windows from current session to main named one (dev, work, etc)
bind C-u command-prompt -p "Session to merge with: " \
   "run-shell 'yes | head -n #{session_windows} | xargs -I {} -n 1 tmux movew -t %%'"

# Detach from session
bind d detach
#bind D if -F '#{session_many_attached}' \
#    'confirm-before -p "Detach other clients? (y/n)" "detach -a"' \
#    'display "Session has only 1 client attached"'

# Hide status bar on demand
#bind C-s if -F '#{s/off//:status}' 'set status off' 'set status on'

# Swap panes back and forth with 1st pane
# When in main-(horizontal|vertical) layouts, the biggest/widest panel is always @1
#bind \ if '[ #{pane_index} -eq 1 ]' \
#     'swap-pane -s "!"' \
#     'select-pane -t:.1 ; swap-pane -d -t 1 -s "!"'

# División de la ventana
bind | split-window -h -c "#{pane_current_path}"  # Divide la pantalla horizontalmente
bind - split-window -v -c "#{pane_current_path}" # Divide la pantalla verticalmente

# Cambiando el tamaño de los páneles
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# create session
bind C-c new-session

# find session
bind C-f command-prompt -p find-session 'switch-client -t %%'
#+END_SRC

*** Monitoreo de ventanas

#+begin_src shell
bind m setw monitor-activity \; display-message 'Monitor window activity [#{?monitor-activity,ON,OFF}]'
#bind M if -F '#{monitor-silence}' \
#    'setw monitor-silence 0 ; display-message "Monitor window silence [OFF]"' \
#    'command-prompt -p "Monitor silence: interval (s)" "setw monitor-silence %%"'
#+end_src

*** [[https://github.com/tmux-plugins/tpm][Plugins]]: TPM


*Key bindings*

| prefix + | Action                                                    |
|----------+-----------------------------------------------------------|
| i        | Instala nuevos /plugins/ desde algún repositorio de =git= |
| u        | Actualiza los /plugins/                                   |
| Alt + u  | Desinstala los /plugins/ que ya no están listados         |

**** El siguiente /script/ instala los plugins de manera automática

#+begin_src shell
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"
#+end_src



**** Listado de /plugins/

#+begin_src shell
set -g @plugin 'tmux-plugins/tpm'
#+end_src


**** Tema

***** Nord

#+begin_src shell
set -g @plugin "arcticicestudio/nord-tmux"
set -g @nord_tmux_no_patched_font "0"
#+end_src

***** /[[https://github.com/jimeh/tmux-themepack][Themepack]]/

#+begin_src shell :tangle no
set -g @plugin 'jimeh/tmux-themepack'
set -g @themepack 'powerline/block/cyan'
#+end_src

***** [[https://github.com/seebi/tmux-colors-solarized][Solarized]]

#+begin_src shell :tangle no
set -g @plugin 'seebi/tmux-colors-solarized'

set -g @colors-solarized '256'
set -g @colors-solarized 'dark'
set -g @colors-solarized 'light'
set -g @colors-solarized 'base16'
#+end_src

***** [[https://github.com/ndyakov/pimux][pimux]]

#+begin_src shell :tangle no
set -g @plugin 'ndyakov/pimux'
#+end_src

***** [[https://github.com/alexanderjeurissen/sombre.tmux][sombre]]

#+begin_src shell :tangle no
set -g @plugin 'alexanderjeurissen/sombre.tmux'
#+end_src
*** Status bar

#+begin_src shell :tangle no
#set -g status-right "#{cpu_icon}"
#set -g status-right '#{cpu_bg_color} CPU: #{cpu_icon} #{cpu_percentage} | %a %h-%d %H:%M '
#set -g status-right "Online: #{online_status} Speed: #{net_speed} Continuum status: #{continuum_status} #{battery_status_bg} Batt: #{battery_icon} #{battery_percentage} #{battery_remain} H: #{prefix_highlight} | %a %h-%d %H:%M "
#+end_src

*** /Display/

#+begin_src shell
set -g base-index 1 # El índice de las ventanas empieza en 1
set -g pane-base-index 1 # El índice de los páneles empieza en 1

setw -g automatic-rename on # rename window to reflect current program
set -g renumber-windows on  # renumber windows when a window is closed

set -g set-titles on                        # set terminal title

set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1500      # slightly longer status messages display time (1.5s)

set -g status-interval 5     # redraw status line every 10 seconds

set -g monitor-activity on # Monitorizar la actividad en las ventanas
set -g visual-activity on
#+end_src


*** Renovar el environment

#+begin_src shell
set -g update-environment \
  "DISPLAY\
  SSH_ASKPASS\
  SSH_AUTH_SOCK\
  SSH_AGENT_PID\
  SSH_CONNECTION\
  SSH_TTY\
  WINDOWID\
  XAUTHORITY"

bind '$' run "~/dotfiles/renew_env.sh"

#+end_src

*** Navegación

#+begin_src shell
# Movimiento entre páneles
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one

# Movimiento circular entre ventanas
unbind n
unbind p
bind -r C-p previous-window # select previous window
bind -r C-n next-window     # select next window
bind Tab last-window        # move to last active window

#+end_src

** Nesting Remote tmux sessions inside our local tmux
:PROPERTIES:
:header-args:shell: :tangle ~/.tmux.conf
:END:

Para que esto funcione, =tmux= debe de estar instalado en el servidor
=SSH= y ambos archivos de configuración deben de estar en él.


#+begin_src shell
# Session is considered to be remote when we ssh into host
if-shell 'test -n "$SSH_CLIENT"' \
    'source-file ~/.tmux.remote.conf'

# We want to have single prefix key "C-a", usable both for local and remote session
# we don't want to "C-a" + "a" approach either
# Idea is to turn off all key bindings and prefix handling on local session,
# so that all keystrokes are passed to inner/remote session

# see: toggle on/off all keybindings · Issue #237 · tmux/tmux - https://github.com/tmux/tmux/issues/237

# Also, change some visual styles when window keys are off
bind -T root F12  \
    set prefix None \;\
    set key-table off \;\
    #set status-style "fg=$color_status_text,bg=$color_window_off_status_bg" \;\
    #set window-status-current-format "#[fg=$color_window_off_status_bg,bg=$color_window_off_status_current_bg]$separator_powerline_right#[default] #I:#W# #[fg=$color_window_off_status_current_bg,bg=$color_window_off_status_bg]$separator_powerline_right#[default]" \;\
    #set window-status-current-style "fg=$color_dark,bold,bg=$color_window_off_status_current_bg" \;\
    if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
    refresh-client -S \;\

bind -T off F12 \
  set -u prefix \;\
  set -u key-table \;\
  set -u status-style \;\
  set -u window-status-current-style \;\
  set -u window-status-current-format \;\
  refresh-client -S
#+end_src


** Run all plugins' scripts
:PROPERTIES:
:header-args:shell: :tangle ~/.tmux.conf
:END:

#+begin_src shell
run -b '~/.tmux/plugins/tpm/tpm'
#+end_src


** Configuración remota: =tmux.remote.conf=
:PROPERTIES:
:header-args:shell: :tangle ~/.tmux.remote.conf
:END:

#+BEGIN_src shell
# show status bar at top for remote session,
# so it do not stack together with local session's one
set -g status-position top

# Set port of SSH remote tunnel, where tmux will pipe buffers to transfer on local machine for copy
set -g @copy_backend_remote_tunnel_port 11988

# In remote mode we don't show "clock" and "battery status" widgets
#set -g status-left "$wg_session"
#set -g status-right "#{prefix_highlight} $wg_is_keys_off $wg_is_zoomed #{sysstat_cpu} | #{sysstat_mem} | #{sysstat_loadavg} | $wg_user_host | #{online_status}"
#+END_SRC
